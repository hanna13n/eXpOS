[PROCESS_TABLE + [SYSTEM_STATUS_TABLE  + CORE*5 + 1] * 16 + 9] = 10;

// // count switch to kernel mode
// [75*512 + 3] = [75*512 + 3] + 1;

alias userSP R0;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE  + CORE*5 + 1] *16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE  + CORE*5 + 1] *16 +11] *512 -1;

multipush(R0);
// ACQUIRE_KERN_LOCK
R1 = 1;
call ACCESS_CONTROL;
multipop(R0);

//EXIT_PROCESS
R1=3;
R2=[SYSTEM_STATUS_TABLE  + CORE*5 + 1];
call PROCESS_MANAGER;

[PROCESS_TABLE + 16* [SYSTEM_STATUS_TABLE  + CORE*5 + 1] + 4 ] = TERMINATED ;

alias i R0;
i = PROCESS_TABLE + 16 + 4;
while ( i< PROCESS_TABLE + 15*16 +5) do
    if ( [i] != TERMINATED ) then

        multipush(R0);
        // RELEASE_LOCK
        R1 = 4;
        R2 = KERN_LOCK;
        call ACCESS_CONTROL;
        call SCHEDULER;
        // ACQUIRE_KERN_LOCK
        R1 = 1;
        call ACCESS_CONTROL;
        multipop(R0);
    endif;
    i=i+16;
endwhile;

// RELEASE_LOCK
R1 = 4;
R2 = KERN_LOCK;
call ACCESS_CONTROL;

halt;
